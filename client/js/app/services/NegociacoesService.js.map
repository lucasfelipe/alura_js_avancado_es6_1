{"version":3,"sources":["../../app-es6/services/NegociacoesService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDAO","Negociacao","NegociacoesService","_http","Promise","all","_obterNegociacoesDaSemana","_obterNegociacoesDaSemanaAnterior","_obterNegociacoesDaSemanaRetrasada","then","negociacoes","reduce","allNegociacoes","neg","concat","catch","Error","error","get","map","Date","objeto","data","quantidade","valor","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacoesService.js","sourcesContent":["import { HttpService } from './HttpService';\nimport { ConnectionFactory } from './ConnectionFactory';\nimport { NegociacaoDAO } from '../dao/NegociacaoDAO';\nimport { Negociacao } from '../models/Negociacao';\n\nexport class NegociacoesService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoes() {\n        return Promise.all([\n            this._obterNegociacoesDaSemana(),\n            this._obterNegociacoesDaSemanaAnterior(),\n            this._obterNegociacoesDaSemanaRetrasada()\n        ]).then(negociacoes => {\n            return negociacoes.reduce((allNegociacoes, neg) =>\n                allNegociacoes.concat(neg), []);\n        }).catch(error => { throw new Error(error); });\n    }\n\n    _obterNegociacoesDaSemana() {\n        return this._http.get('negociacoes/semana')\n            .then(negociacoes => {\n                return negociacoes.map(objeto =>\n                    new Negociacao(new Date(objeto.data),\n                        objeto.quantidade,\n                        objeto.valor));\n            }).catch(error => {\n                console.log(error);\n                throw new Error('Não foi possível obter as negociações da semana');\n            });\n    }\n\n    _obterNegociacoesDaSemanaAnterior() {\n        return this._http.get('negociacoes/anterior')\n            .then(negociacoes => {\n                return negociacoes.map(objeto =>\n                    new Negociacao(new Date(objeto.data),\n                        objeto.quantidade,\n                        objeto.valor));\n            }).catch(error => {\n                console.log(error);\n                throw new Error('Não foi possível obter as negociações da semana');\n            });\n\n\n    }\n\n    _obterNegociacoesDaSemanaRetrasada() {\n        return this._http.get('negociacoes/retrasada')\n            .then(negociacoes => {\n                return negociacoes.map(objeto =>\n                    new Negociacao(new Date(objeto.data),\n                        objeto.quantidade,\n                        objeto.valor));\n            }).catch(error => {\n                console.log(error);\n                throw new Error('Não foi possível obter as negociações da semana');\n            });\n\n    }\n\n    cadastra(negociacao) {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDAO(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação cadastrada com sucesso')\n            .catch(error => {\n                console.log(error);\n                throw new Error('Não foi possível adicionar a negociação')\n            });\n    }\n\n    lista() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDAO(connection))\n            .then(dao => dao.listaTodos())\n            .catch(error => {\n                console.log(error);\n                throw new Error('Não foi possível obter as negociações');\n            });\n    }\n\n    apaga() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDAO(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações apagadas com sucesso')\n            .catch(error => {\n                console.log(error);\n                throw new Error('Não foi possível apagar as negociações');\n            });\n    }\n\n    importa(listaAtual) {\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacao =>\n                    !listaAtual.some(negociacaoExistente =>\n                        negociacao.isEquals(negociacaoExistente)))\n            ).catch(error => {\n                console.log(error);\n                throw new Error('Não foi possível importar as negociações');\n            });\n    }\n}"]}